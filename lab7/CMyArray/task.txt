Задание 2
Вариант 1 – 250 баллов - CMyArray
Разработайте шаблонный класс CMyArray, представляющий собой массив элементов некоторого типа T. Массив должен предоставлять следующие возможности:

Возможность добавления элемента в конец массива
Возможность получения количества элементов, содержащихся в массиве
Возможность осуществления индексированного доступа к элементам массива при помощи оператора «[]». В случае, если индекс элемента выходит за пределы массива, должно выбрасываться исключение std::out_of_range
Возможность изменения длины массива при помощи метода Resize(). В случае, если новая длина массива больше прежней, вставляемые в конец массива элементы должны инициализироваться значением по умолчанию для типа T.
Возможность опустошения массива (удаления всех его элементов) при помощи метода Clear.
Конструктор копирования и оператор присваивания
Массив должен динамически увеличивать свой размер при добавлении элементов. Вместимость буфера для хранения элементов должна удваиваться.
Конструктор перемещения и перемещающий оператор присваивания
Методы begin() и end(), а также rbegin() и rend(), возвращающие итераторы для перебора элементов вектора в прямом и обратном порядке.
Все методы класса CMyArray должны предоставлять гарантию безопасности исключений не ниже базовой, операции присваивания — не ниже строгой, а деструктор – гарантировать отсутствие исключений. Описанные гарантии безопасности исключений предполагаются для типа элементов, у которого конструкторы и операции присваивания предоставляют гарантию безопасности не ниже строгой.

Массив должен быть реализован своими силами без использования класса std::vector и ему подобных.

Программа должна демонстрировать работу шаблонного класса CMyArray в качестве массива строк (std::string) и массива чисел с плавающей запятой.

Для класса должны быть разработаны модульные тесты.

Бонус в 20 баллов

Дополнительно можно получить до 20 баллов, если реализовать в классе CMyArray шаблонный оператор присваивания, выполняющий присваивание элементов массива одного типа массиву элементов другого типа с использованием статического преобразования типов (static_cast). Данный оператор также должен быть безопасен к возникновению исключений.